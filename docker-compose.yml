# service configuration for our database
db:

  # use the preferred version of the official Postgres image
  # see https://hub.docker.com/_/postgres/
  image: postgres:9.4.5

  # persist the database between containers by storing it in a volume
  volumes:
    - docker-example-postgres:/var/lib/postgresql/data
  environment:
    - "POSTGRES_USER=kellye"
    - "POSTGRES_PASSWORD=password"
    - "POSTGRES_DB=portfolio"

# service configuration for our dockerized Rails app
app:

  # use the Dockerfile next to this file
  build: .

  # rely on the RAILS_ENV value of the host machine
  environment:
    RAILS_ENV: production

  # makes the app container aware of the DB container
  links:
    - db:postgres

  ports:
    - "3000:3000"

  volumes:
    - ./:/var/www/docker_example

app-cli:

  build: .
  command: /bin/bash
  tty: true
  links:
    - db:postgres
    - app
  volumes_from:
    - app

# service configuration for our web server
# web:

  # # set the build context to the root of the Rails app
  # build: .

  # # build with a different Dockerfile
  # dockerfile: config/containers/Dockerfile-nginx

  # # makes the web container aware of the app container
  # links:
    # - app

  # # expose the port we configured Nginx to bind to
  # ports:
    # - "80:80"
